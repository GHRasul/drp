<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drp.data.dao.impl.OrderDaoImpl">

	<sql id="table"> `order` </sql>
	
	<resultMap type="order" id="orderMap">
		<result property="id" column="id"/>
		<result property="shopId" column="shop_id"/>
		<result property="userId" column="user_id"/>
		<result property="number" column="number"/>
		<result property="totalPrice" column="total_price"/>
		<result property="status" column="status"/>
		<result property="createTime" column="create_time"/>
		<result property="outTime" column="out_time"/>
		<result property="inTime" column="in_time"/>
		<result property="createBy" column="create_by"/>
		<result property="updateBy" column="update_by"/>
		<result property="updateTime" column="update_time"/>
	</resultMap>
	
	<sql id="sql_where">
		<if test="id != null and id != ''"> and id = #{id} </if>
		<if test="shop_id != null"> and shop_id = #{shop_id} </if>
		<if test="user_id != null"> and user_id = #{user_id} </if>
		<if test="number != null and number != ''"> and number = #{number} </if>
		<if test="total_price != null"> and total_price = #{total_price} </if>
		<if test="status != null"> and status = #{status} </if>
		<if test="create_time != null"> and create_time = #{create_time} </if>
		<if test="out_time != null"> and out_time = #{out_time} </if>
		<if test="in_time != null"> and in_time = #{in_time} </if>
		<if test="create_by != null and create_by != ''"> and create_by = #{create_by} </if>
		<if test="update_by != null and update_by != ''"> and update_by = #{update_by} </if>
		<if test="update_time != null"> and update_time = #{update_time} </if>
	</sql>
	
	<sql id="sql_where_key">
		id = #{id}
	</sql>
	
	<sql id="sql_order_key">
		update_time desc
	</sql>

	<insert id="insert" parameterType="order" >
		insert into
		<include refid="table" />
		(`id`, `shop_id`, `user_id`, `number`, `total_price`, `status`, `out_time`, `in_time`, `create_by`, `create_time`, `update_by`, `update_time`
		) values (
		#{id}, #{shopId}, #{userId}, #{number}, #{totalPrice}, #{status}, #{outTime}, #{inTime}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}
		)
	</insert>

	<insert id="batchInsert" parameterType="java.util.List" >
		insert into
		<include refid="table" />
		(
			id, shop_id, user_id, number, total_price, status, create_time, out_time, in_time, create_by, update_by, update_time
		) values
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.id}, #{item.shopId}, #{item.userId}, #{item.number}, #{item.totalPrice}, #{item.status}, #{item.createTime}, #{item.outTime}, #{item.inTime}, #{item.createBy}, #{item.updateBy}, #{item.updateTime})
		</foreach>
	</insert>
	
	<delete id="delete" parameterType="order">
		delete from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</delete>
	
	<update id="update" parameterType="order">
		update
		<include refid="table" />
		<set>
			id = #{id},
			shop_id = #{shopId},
			user_id = #{userId},
			number = #{number},
			total_price = #{totalPrice},
			status = #{status},
			create_time = #{createTime},
			out_time = #{outTime},
			in_time = #{inTime},
			create_by = #{createBy},
			update_by = #{updateBy},
			update_time = #{updateTime}
		</set>
		<where>
			<include refid="sql_where_key" />
		</where>
	</update>
	
	<!-- 按主键查询 -->
	<select id="select" parameterType="order" resultMap="orderMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</select>

	<!-- 按参数查询 -->
	<select id="selectBy" parameterType="java.util.Map" resultMap="orderMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where" />
		</where>
	</select>

	<!-- 按参数查询（分页） -->
	<select id="selectPage" parameterType="java.util.Map" resultMap="orderMap">
		select * from
		<include refid="table" />
		<where>
			shop_id = #{shop_id} and status in (#{status})
			<if test="name != null and name != ''"><![CDATA[ and name LIKE concat('%',#{name}, '%')]]></if>
		</where>
		order by
		<include refid="sql_order_key" />
	</select>

	<!-- 获取总数据 -->
	<select id="getCount" parameterType="java.util.Map" resultType="integer">
		select count(*) from
		<include refid="table" />
		<where>
			shop_id = #{shop_id} and status in (#{status})
			<if test="name != null and name != ''"><![CDATA[ and name LIKE concat('%',#{name}, '%')]]></if>
		</where>
	</select>

	<select id="getGoodsList" parameterType="string" resultType="orderGoodsDto">
		select g.num as num, gd.name as goodsName, gd.original_price as originalPrice from `order` o left join order_goods g on o.id = g.order_id left join goods gd on g.goods_id = gd.id
		<where>
			o.id = #{id}
		</where>
		order by o.create_time desc
	</select>

	<!-- 获取总数据 -->
	<select id="getGoodsCount" parameterType="java.util.Map" resultType="integer">
		select count(*) from `order` o left join order_goods g on o.id = g.order_id left join goods gd on g.goods_id = gd.id
		<where>
			o.id = #{order_id}
		</where>
	</select>
	
</mapper>