<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drp.data.dao.impl.GoodsStockLogDaoImpl">

	<sql id="table"> `goods_stock_log` </sql>
	
	<resultMap type="goodsStockLog" id="goodsStockLogMap">
		<result property="id" column="id"/>
		<result property="shopId" column="shop_id"/>
		<result property="goodsId" column="goods_id"/>
		<result property="previousStock" column="previous_stock"/>
		<result property="quantity" column="quantity"/>
		<result property="currentStock" column="current_stock"/>
		<result property="type" column="type"/>
		<result property="createBy" column="create_by"/>
		<result property="createTime" column="create_time"/>
		<result property="updateBy" column="update_by"/>
		<result property="updateTime" column="update_time"/>
		<result property="number" column="number"/>
	</resultMap>
	
	<sql id="sql_where">
		<if test="id != null"> and id = #{id} </if>
		<if test="shop_id != null"> and shop_id = #{shop_id} </if>
		<if test="goods_id != null and goods_id != ''"> and goods_id = #{goods_id} </if>
		<if test="previous_stock != null"> and previous_stock = #{previous_stock} </if>
		<if test="quantity != null"> and quantity = #{quantity} </if>
		<if test="current_stock != null"> and current_stock = #{current_stock} </if>
		<if test="type != null and type != ''"> and type = #{type} </if>
		<if test="create_by != null and create_by != ''"> and create_by = #{create_by} </if>
		<if test="create_time != null"> and create_time = #{create_time} </if>
		<if test="update_by != null and update_by != ''"> and update_by = #{update_by} </if>
		<if test="update_time != null"> and update_time = #{update_time} </if>
		<if test="number != null"> and number = #{number} </if>
	</sql>
	
	<sql id="sql_where_key">
		id = #{id}
	</sql>
	
	<sql id="sql_order_key">
		id
	</sql>
	
	<insert id="insert" parameterType="goodsStockLog" >
		insert into
		<include refid="table" />
		(
			`id`, `shop_id`, `goods_id`, `previous_stock`, `quantity`, `current_stock`, `type`, `create_by`, `create_time`,
		`update_by`, `update_time`,`number`
		) values(
			#{id}, #{shopId}, #{goodsId}, #{previousStock}, #{quantity}, #{currentStock}, #{type}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime},#{number}
		)
	</insert>
	
	<insert id="batchInsert" parameterType="java.util.List" >
		insert into
		<include refid="table" />
		(
			`id`, `shop_id`, `goods_id`, `previous_stock`, `quantity`, `current_stock`, `type`, `create_by`, `create_time`,
		`update_by`, `update_time`,`number`
		) values
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.id}, #{item.shopId}, #{item.goodsId}, #{item.previousStock}, #{item.quantity}, #{item.currentStock}, #{item.type}, #{item.createBy}, #{item.createTime}, #{item.updateBy}, #{item.updateTime},#{number})
		</foreach>
	</insert>
	
	<delete id="delete" parameterType="goodsStockLog">
		delete from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</delete>
	
	<update id="update" parameterType="goodsStockLog">
		update
		<include refid="table" />
		<set>
			`id` = #{id},
			`shop_id` = #{shopId},
			`goods_id` = #{goodsId},
			`previous_stock` = #{previousStock},
			`quantity` = #{quantity},
			`current_stock` = #{currentStock},
			`type` = #{type},
			`create_by` = #{createBy},
			`create_time` = #{createTime},
			`update_by` = #{updateBy},
			`update_time` = #{updateTime}
			`number` = #{number}
		</set>
		<where>
			<include refid="sql_where_key" />
		</where>
	</update>
	
	<!-- 按主键查询 -->
	<select id="select" parameterType="goodsStockLog" resultMap="goodsStockLogMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</select>

	<!-- 按参数查询 -->
	<select id="selectBy" parameterType="java.util.Map" resultMap="goodsStockLogMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where" />
		</where>
	</select>

	<!-- 按参数查询（分页） -->
	<select id="selectPage" parameterType="java.util.Map" resultMap="goodsStockLogMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where" />
		</where>
		order by
		<include refid="sql_order_key" />
	</select>
	
</mapper>