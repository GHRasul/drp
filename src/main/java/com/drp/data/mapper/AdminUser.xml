<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drp.data.dao.impl.AdminUserDaoImpl">

	<sql id="table"> admin_user </sql>
	
	<resultMap type="adminUser" id="adminUserMap">
		<result property="id" column="id"/>
		<result property="account" column="account"/>
		<result property="password" column="password"/>
		<result property="shopId" column="shop_id"/>
		<result property="name" column="name"/>
		<result property="mobile" column="mobile"/>
		<result property="roleId" column="role_id"/>
		<result property="status" column="status"/>
		<result property="salt" column="salt"/>
		<result property="createBy" column="create_by"/>
		<result property="createTime" column="create_time"/>
		<result property="updateBy" column="update_by"/>
		<result property="updateTime" column="update_time"/>
	</resultMap>
	
	<sql id="sql_where">
		<if test="account != null and account != ''"> and account = #{account} </if>
		<if test="password != null and password != ''"> and password = #{password} </if>
		<if test="shop_id != null"> and shop_id = #{shop_id} </if>
		<if test="name != null and name != ''"> and name = #{name} </if>
		<if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
		<if test="role_id != null and role_id != ''"> and role_id = #{role_id} </if>
		<if test="status != null and status != ''"> and status = #{status} </if>
		<if test="salt != null and salt != ''"> and salt = #{salt} </if>
		<if test="create_by != null and create_by != ''"> and create_by = #{create_by} </if>
		<if test="create_time != null"> and create_time = #{create_time} </if>
		<if test="update_by != null and update_by != ''"> and update_by = #{update_by} </if>
		<if test="update_time != null"> and update_time = #{update_time} </if>
	</sql>
	
	<sql id="sql_where_key">
		id = #{id}
	</sql>
	
	<sql id="sql_order_key">
		id
	</sql>
	
	<insert id="insert" parameterType="adminUser" >
		insert into
		<include refid="table" />
		(
			id, account, password, shop_id, name, mobile, role_id, status, salt, create_by, create_time, update_by, update_time
		) values(
			#{id}, #{account}, #{password}, #{shopId}, #{name}, #{mobile}, #{roleId}, #{status}, #{salt}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}
		)
	</insert>
	
	<insert id="batchInsert" parameterType="java.util.List" >
		insert into
		<include refid="table" />
		(
			id, account, password, shop_id, name, mobile, role_id, status, salt, create_by, create_time, update_by, update_time
		) values
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.id}, #{item.account}, #{item.password}, #{item.shopId}, #{item.name}, #{item.mobile}, #{item.roleId}, #{item.status}, #{item.salt}, #{item.createBy}, #{item.createTime}, #{item.updateBy}, #{item.updateTime})
		</foreach>
	</insert>
	
	<delete id="delete" parameterType="adminUser">
		delete from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</delete>
	
	<update id="update" parameterType="adminUser">
		update
		<include refid="table" />
		<set>
			id = #{id},
			account = #{account},
			password = #{password},
			shop_id = #{shopId},
			name = #{name},
			mobile = #{mobile},
			role_id = #{roleId},
			status = #{status},
			salt = #{salt},
			create_by = #{createBy},
			create_time = #{createTime},
			update_by = #{updateBy},
			update_time = #{updateTime}
		</set>
		<where>
			<include refid="sql_where_key" />
		</where>
	</update>
	
	<!-- 按主键查询 -->
	<select id="select" parameterType="adminUser" resultMap="adminUserMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</select>

	<!-- 按参数查询 -->
	<select id="selectBy" parameterType="java.util.Map" resultMap="adminUserMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where" />
		</where>
	</select>

	<!-- 按参数查询（分页） -->
	<select id="selectPage" parameterType="java.util.Map" resultType="adminUserDto">
		select u.*, u.create_time as createTime, s.name as shopName, r.name as roleName from admin_user u left join shop s on u.shop_id = s.shop_num left join role r on u.role_id = r.id
		<where>
			<if test="name != null and name != ''"><![CDATA[ and u.name LIKE concat('%',#{name}, '%')]]></if>
		</where>
		order by
			update_time desc
	</select>

	<!-- 按参数查询（分页）数量 -->
	<select id="getCount" parameterType="java.util.Map" resultType="integer">
		select count(*) from
		<include refid="table" />
		<where>
			<if test="name != null and name != ''"><![CDATA[ and u.name LIKE concat('%',#{name}, '%')]]></if>
		</where>
	</select>

	<select id="findRoleName" parameterType="integer" resultType="string">
		select name from role where id = #{0}
	</select>
</mapper>