<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drp.data.dao.impl.RoleDaoImpl">

	<sql id="table"> role </sql>
	
	<resultMap type="role" id="roleMap">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="status" column="status"/>
		<result property="createBy" column="create_by"/>
		<result property="createTime" column="create_time"/>
		<result property="updateBy" column="update_by"/>
		<result property="updateTime" column="update_time"/>
	</resultMap>
	
	<sql id="sql_where">
		<if test="id != null"> and id = #{id} </if>
		<if test="name != null and name != ''"> and name = #{name} </if>
		<if test="status != null and status != ''"> and status = #{status} </if>
		<if test="create_by != null and create_by != ''"> and create_by = #{create_by} </if>
		<if test="create_time != null"> and create_time = #{create_time} </if>
		<if test="update_by != null and update_by != ''"> and update_by = #{update_by} </if>
		<if test="update_time != null"> and update_time = #{update_time} </if>
	</sql>
	
	<sql id="sql_where_key">
		id = #{id}
	</sql>
	
	<sql id="sql_order_key">
		id
	</sql>
	
	<insert id="insert" parameterType="role" >
		insert into
		<include refid="table" />
		(
			id, name, status, create_by, create_time, update_by, update_time
		) values(
			#{id}, #{name}, #{status}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}
		)
	</insert>
	
	<insert id="batchInsert" parameterType="java.util.List" >
		insert into
		<include refid="table" />
		(
			id, name, status, create_by, create_time, update_by, update_time
		) values
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.id}, #{item.name}, #{item.status}, #{item.createBy}, #{item.createTime}, #{item.updateBy}, #{item.updateTime})
		</foreach>
	</insert>
	
	<delete id="delete" parameterType="role">
		delete from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</delete>
	
	<update id="update" parameterType="role">
		update
		<include refid="table" />
		<set>
			id = #{id},
			name = #{name},
			status = #{status},
			create_by = #{createBy},
			create_time = #{createTime},
			update_by = #{updateBy},
			update_time = #{updateTime},
		</set>
		<where>
			<include refid="sql_where_key" />
		</where>
	</update>
	
	<!-- 按主键查询 -->
	<select id="select" parameterType="role" resultMap="roleMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</select>

	<!-- 按参数查询 -->
	<select id="selectBy" parameterType="java.util.Map" resultMap="roleMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where" />
		</where>
	</select>

	<!-- 按参数查询（分页） -->
	<select id="selectPage" parameterType="java.util.Map" resultMap="roleMap">
		select * from role
		<where>
			<if test="name != null and name != ''"><![CDATA[ and name LIKE concat('%',#{name}, '%')]]></if>
		</where>
		order by
		create_time desc
	</select>

	<!-- 获取总数据 -->
	<select id="getCount" parameterType="java.util.Map" resultType="integer">
		select count(*) from role
		<where>
			<if test="name != null and name != ''"><![CDATA[ and name LIKE concat('%',#{name}, '%')]]></if>
		</where>
	</select>

</mapper>